syntax = "proto2";
package hw.trezor.messages.onegram;
// Sugar for easier handling in Java
option java_package = "com.satoshilabs.trezor.lib.protobuf";
option java_outer_classname = "TrezorMessageOnegram";
/**
* Request: Ask device for Onegram public key corresponding to address_n path
* @start
* @next OnegramPublicKey
* @next Failure
*/
message OnegramGetPublicKey {
    repeated uint32 address_n = 1;  // BIP-32 path to derive the key from master node 44'/204'/0'
    optional bool show_display = 2; // optionally show on display before sending the result
}
/**
* Response: Contains an Onegram public key derived from device private seed
* @end
*/
message OnegramPublicKey {
    optional string wif_public_key = 1;     // Onegram pub key in Base58 encoding
    optional bytes raw_public_key = 2;      // Raw public key
}


/* Temporary solution just for signing transaction */
message OnegramSignTx {
    repeated uint32 address_n = 1;
    optional bytes chain_id = 2;
    optional OnegramTxHeader header = 3;

    message OnegramTxHeader {
        optional uint32 ref_block_num = 1; // should be uint16, but it's not supported
        optional uint32 ref_block_prefix = 2;
        optional uint32 expiration = 3;
    }
}

message OnegramSignedTx {
    optional bytes signature = 1;
    optional string tx_hash = 2; //hash of the transaction
}

